#安装sudo
apt-get install sudo
vim /etc/sudoers
增加一行
user-name ALL=(ALL:ALL) ALL

#安装flash
apt-get install flashplugin-nonfree
update-flashplugin-nonfree --install
升级方法
到官网下载相应的压缩包并解压得到libflashplayer.so
mv lib* /usr/lib/flashplugin-nonfree/libflashplayer.so
 
#freshclam
/etc/inin.d/clamav-freshclam stop
freshclam -v
/etc/init.d/clamav-freshclam start

lantern---tor
桥/http/https/127.0.0.1:8787
linux 缺少的库函数 apt-get install libappindicator3-1
#查杀指令
xkill--终端命令，杀桌面客户端
pkill/kilall + 程序名
kill -9/kill强制查杀/一般查杀ID
pgrep -l （httpd）/显示冒个程序的ID
#安装.deb软件
dpkg -i *.deb
apt-get -f install /修复依赖
#全选 //ggVG
gg  让光标移到首行 
V   是进入Visual(可视）模式
G  光标移到最后一行
选中内容以后就可以其他的操作了，比如：
d  删除选中内容
y  复制选中内容到0号寄存器
"+y  复制选中内容到＋寄存器，也就是系统的剪贴板，供其他程序用
#ex模式
$ + 命令 表示在普通的bash的命令行下
:  + 命令 表示在vim的ex（命令）模式， 按"Ctrl" + ":" 进入
我们知道vim有3种模式：普通模式，插入模式，ex(命令)模式。
  $ ex  filename
ex命令由行地址（行号）和命令组成，它们都以回车键结束。
   : 2 p 显示当前文件的第二行内容
   ：2 , 10 p 显示2～10行的内容
： s/hello/hehe
会把第12行的第一个"hello"改为"hehe"
使用ex进行编辑
ex常用编辑命令：
d     (delete)   删除行
m   (move)    移动行
co  (copy)      复制行
t    复制行，和co同义
：3, 18 d              删除3~18行
：11, 15 m 23      把11～15行移动到23行下面。
：23, 29 co 100   复制23～29行并把它们粘贴到100行下面
：set nu 或：set number 显示行号
：set nonu  或：set nonumber 不显示行号
： =                   显示总行数
： . =               显示当前行号
： /pattern/=   显示地一个与模式pattern想匹配的行号

.（点）  代表当前行
$           代表文件的最后一行；
%          代表文件的每一行，等同于1, $的组合
： . ,  $ d    删除从当前行到文件末尾
：20, . m $  把20～当前行的文本移动到文件末尾
：% d         删除文件中的所有行
：% t $        复制所有行并把它们粘贴到文件的尾部（成为连续的副本）
：. , . + 20 d   删除从当前行到当前行以下20行
：226 , $  m  .-2  把226行到文件末尾的文本移动到当前行的上面两行的后面。
：. , +20 #     显示从当前行下面20行的行号
：-, + t 0  复制三行（当前行，前一行，后一行），并粘贴到文件开头
搜索模式
ex定位行的另一种方法是使用搜索模式。例如：
：/pattern/ d     删除下一个包行模式pattern的行
：/pattern/+ d   删除下一个包行模式pattern的行的下一行（也i可使用+1来代替）
：/pattern1/,/pattern2/ d  删除第一个包行pattern1的行与第一个包行pattern2的行之间的所有行
：. , /pattern/ m 23    从当前行到第一个包行pattern的行之间的文本移动到23行后面。
：100, +5 p
会发生错误， 因为这个命令等价于：100, 6p， 
：100 ; +5 p   就会显示100～105行
：/patter/ ; +10 p  
：g /pattern             寻找（移动到）模式pattern在文件中最后出现的位置
：g /pattern/ p         寻找并显示文件中所有包含模式pattern的行
：g!/pattern/nu       寻找并显示文件中所有不包行模式pattern的行，并显示这些行号  
：20, 40g/pattern/p  寻找并显示第20到40行之间所有包含模式pattern的行
组合ex命令
：1 , 3d |  s/thier/their/ 
把第1行到第3行删除，然后在当前行（该行是调用ex提示符以前的第4行）进行替换
：1 , 5 m 10 | g/pattern/nu
把第1行到第5行移动到第10行后面，然后显示所有包含模式pattern的行。
：w   把缓冲区写（保存）到文件中但不退出，可以（和应该）在编辑会话期间使用：w来保护编辑操作以避免系统瘫痪或重大的编辑错误
：q    退出编辑器，返回系统提示符
：wq  写文件并退出编辑器，即使没有修改文件，写操作也会无条件的进行
：x 写文件并退出编辑器，只有修改了文件写操作才能进行
有时候vi编辑器会有警告，可以在命令后面加上感叹号！来强制执行，忽略警告
保存部分文件到新文件中
有时候，希望把当前文件的一部分保存为一个新的单独文件。
：20 , $w  newfile   把第20行到文件末尾文本保存到新文件newfile中
：. , 500 w newfile   从当前行到500行文本保存到新文件newfile中
可以使用重定向添加符（>>）和w把缓冲区的全部或部分内容添加到现有文件尾。
：30 , $w >> file 把30行到文件末尾添加到文件file的末尾
把文件复制到另一个文件中
有时想把系统中已有的文本或数据复制到正在编辑的文件中，在vi中可以使用ex命令读取另一个文件的内容：
：read  filename
或者使用缩写形式
：r  filename
这个命令会把filename文件的内容插入当前编辑文本的光标位置后面一行。
如果想指定其它行，只需要在read或r命令之前输入行号即可。例如：
：10 r filename   将会把filename的文本输入到当前第10行后。
如果文件在其他目录下，只需要加上路径即可。例如:
：r  /home/time/data    把/home/time目录下的data内容插入当前编辑文件
应用地址符组合或搜索模式可以更灵活：
：$r  /home/tim/data  把读取的文件内容加到当前编辑文件的末尾
：0r  /home/tim/data   把读取的文件内容加到文件开头位置
：/pattern/r  /home/tim/data  将读取的文件内容加到当前文件包行模式/pattern的行的后面
编辑多个文件
在首次调用vi时，可以制定要编辑的多个文件，然后使用ex命令在文件之间进行切换。例如：
$ vi  file1  file2    首先编辑file1，完成第一个文件的编辑后，ex的：w命令写（保存）file1，：next 命令（缩写：n）调用下一个文件（file2）
2. 使用参数列表
除了使用：n移动到下一个文件。还有其他参数可以使用
：args命令（缩写：ar）列出在所有编辑的文件，当前文件使用方括号括起来。
：rewind（缩写：rew）  把当前文件设置为上一个编辑的文件
：last（缩写：la）       把当前文件设置为最后一个文件
3. 调用新文件
你不必在编辑会话的开始就调用多个文件，可以使用ex的：e命令在任何时候切换到另一个文件。如果想在vi中编辑另一个文件，那么首先需要保存当前文件（：w），然后给出命令：
：e  filename
使用这个命令切换到新文件filename时，vi把之前的文件名记为#， 当前文件名记为%，使用这两个文件可以迅速切换
：e #  切换到上一个文件中
：r  #  把上一个文件的内容粘贴到当前文件中
：e! #  放弃当前文件编辑，并返回上一个文件中
：e #的快捷键：
由于切换到前面的文件会经常发生，因此不必在ex命令行下进行这种操作。
可以使用快捷键Ctrl + ^来使用，和：e #效果相同。
#进入列模式
 ctrl+c
 上下滑动+左右滑动=选择一块内容
 上下滑动+I+输入的内容+ESC=批量一列输入你要输入的内容（如#，”，//）
 上下滑动+d=删除
:起始行号,结束行号s/^/注释符/g
在10 - 20行添加 # 注释
:10,20s/^/#/g
:起始行号,结束行号s#^#注释符#g
在27 - 30行添加 // 注释
:27,30s#^#//#g
129 #安装debian 8 Ubuntu 14.10下安装VMware Workstation 11
130 1.sudo apt-get update  
131 2.sudo apt-get upgrade 
132 3.wget https://download3.vmware.com/software/wkst/file/VMware-Workstation-Full-11.0.0
133 4.chmod a+x VMware-Workstation-Full-11.0.0-2305329.x86_64.bundle
134 5.sudo ./VMware-Workstation-Full-11.0.0-2305329.x86_64.bundle
135 6.1F04Z-6D111-7Z029-AV0Q4-3AEH8                 
136 7.sudo apt-get install linux-headers-$(uname -r)
137 8.install open-vm-tools
